#!/usr/bin/env php
<?php

use Aeon\Automation\Console\AeonApplication;
use Aeon\Automation\Console\Command\BranchList;
use Aeon\Automation\Console\Command\CacheClear;
use Aeon\Automation\Console\Command\ChangelogGenerate;
use Aeon\Automation\Console\Command\MilestoneCreate;
use Aeon\Automation\Console\Command\MilestoneList;
use Aeon\Automation\Console\Command\ProjectList;
use Aeon\Automation\Console\Command\PullRequestsList;
use Aeon\Automation\Console\Command\ReleaseList;
use Aeon\Automation\Console\Command\TagList;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Output\ConsoleOutput;

require_once __DIR__ . '/../vendor/autoload.php';

(function () {
    error_reporting(E_ALL);
    ini_set('display_errors', 'stderr');

    require __DIR__ . '/../vendor/autoload.php';

    $application = new AeonApplication('aeon-automation');
    $output = new ConsoleOutput();
    $input = new ArgvInput();


    $rootDir = (\strlen(Phar::running(false)) === 0) ? \realpath(__DIR__ . '/../') : Phar::running();

    $defaultConfigPaths = [
            __DIR__,
        __DIR__ . '/../',
        __DIR__ . '/../../',
        dirname(Phar::running(false)),
        dirname(Phar::running(false)) . '/../',
        dirname(Phar::running(false)) . '/../../',
        getcwd()
    ];

    $application->add(new ProjectList($defaultConfigPaths));
    $application->add(new MilestoneCreate($defaultConfigPaths));
    $application->add(new MilestoneList($defaultConfigPaths));
    $application->add(new ReleaseList($defaultConfigPaths));
    $application->add(new PullRequestsList($defaultConfigPaths));
    $application->add(new ChangelogGenerate($rootDir, $defaultConfigPaths));
    $application->add(new BranchList($defaultConfigPaths));
    $application->add(new TagList($defaultConfigPaths));
    $application->add(new CacheClear());
    $application->run($input, $output);
})();